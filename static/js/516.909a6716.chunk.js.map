{"version":3,"file":"static/js/516.909a6716.chunk.js","mappings":"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","sources":["components/MovieInformation.js","pages/MovieDetails.js","servises/Api.js","servises/utils/utils.js","webpack://react-homework-template/./src/components/style.module.css?6fa0"],"sourcesContent":["import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieInformation = ({ movieId }) => {\n  return (\n    <>\n      <h3>More information</h3>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <Outlet />\n        <li>\n          <Link to={`/movies/${movieId}/review`}>Review</Link>\n        </li>\n      </ul>\n    </>\n  );\n};\nMovieInformation.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieInformation;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\n\nimport { getMovieById } from 'servises/Api';\nimport imgUrl from 'servises/utils/utils';\nimport styled from '../components/style.module.css';\nimport MovieInformation from 'components/MovieInformation';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const locationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const getReleaseDate = releaseDate => {\n    return releaseDate ? new Date(releaseDate).getFullYear() : 'No information';\n  };\n  const genres = movie ? movie.genres.map(genre => genre.name).join(', ') : '';\n\n  //   const poster_path = movie?.poster_path;\n  const { poster_path } = movie ?? '';\n  return (\n    <>\n      <Link className={styled.btn} to={locationRef.current}>\n        Go back\n      </Link>\n      {movie && (\n        <>\n          <h2>\n            {movie.title} ({getReleaseDate(movie.release_date)})\n          </h2>\n          <ul>\n            <li>\n              <img src={imgUrl(poster_path)} alt={movie.title} width={300} />\n              <p>User Score: {movie.vote_average.toFixed(1)}</p>\n              <p>Overview</p>\n              <p>{movie.overview}</p>\n              <p>Genres: {genres}</p>\n            </li>\n          </ul>\n          <MovieInformation movieId={movieId} />\n        </>\n      )}\n      {error && <p>Movie load fail</p>}\n    </>\n  );\n};\n\nMovieDetails.protoTypes = {\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  release_date: PropTypes.number.isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'af7806c242ad95763370aa39444155c5',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await instance.get(`trending/all/day`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async search => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query: `${search}`,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCastById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG = 'http://surl.li/fquko';\nconst imgUrl = poster_path => {\n  return poster_path ? BASE_IMG_URL + poster_path : DEFAULT_IMG;\n};\n\nexport default imgUrl;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"style_btn__-6CXS\",\"item\":\"style_item__MF55d\",\"list\":\"style_list__ExEtk\"};"],"names":["movieId","to","MovieDetails","useState","movie","setMovie","error","setError","useParams","location","useLocation","locationRef","useRef","state","from","useEffect","fetchMovie","getMovieById","result","releaseDate","genres","map","genre","name","join","poster_path","className","styled","current","title","release_date","Date","getFullYear","src","imgUrl","alt","width","vote_average","toFixed","overview","protoTypes","PropTypes","instance","axios","baseURL","params","api_key","getTrendingMovie","get","data","console","log","getSearchMovie","search","query","id","getMovieCastById","getMovieReviewById"],"sourceRoot":""}