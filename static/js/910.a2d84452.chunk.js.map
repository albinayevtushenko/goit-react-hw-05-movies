{"version":3,"file":"static/js/910.a2d84452.chunk.js","mappings":"2OAqDA,UA7Ca,WACX,OAA4BA,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAiBJ,GAFxB,OAERK,EAFQ,OAGdV,EAAUU,EAAOC,MACjBT,GAAW,GAJG,gDAMdE,EAAS,EAAD,IANM,yBAQdF,GAAW,GARG,4EAAH,qDAWfM,GACD,GAAE,CAACH,KAGF,gCACGN,IACC,eAAIa,UAAWC,EAAAA,EAAAA,KAAf,SACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACV,+BACE,yBACE,4BACE,yBAAG,SAAOF,MACV,gBAAKG,KAAKC,EAAAA,EAAAA,GAAOH,GAAeI,IAAKL,EAAMM,MAAO,OAClD,yBAAG,cAAYJ,SAJVH,IAFD,MAafd,IAAW,uBAAG,eACdE,IAAS,uBAAG,qBAGlB,C,sLCjDKoB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,+GAELL,EAASM,IAAT,oBAFK,uBAEpBC,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5BC,QAAQC,IAAR,MAL4B,yDAAH,qDAShBC,EAAc,mCAAG,WAAMC,GAAN,yFACLX,EAASM,IAAT,eAA6B,CAClDH,OAAQ,CACNS,MAAM,GAAD,OAAKD,MAHc,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdM,EAAY,mCAAG,WAAMrB,GAAN,kGAEDQ,EAASM,IAAT,iBAAuBd,IAFtB,uBAEhBe,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBC,QAAQC,IAAR,MALwB,yDAAH,sDASZvB,EAAgB,mCAAG,WAAMM,GAAN,kGAELQ,EAASM,IAAT,iBAAuBd,EAAvB,aAFK,uBAEpBe,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,gCAK5BC,QAAQC,IAAR,MAL4B,yDAAH,sDAShBK,EAAkB,mCAAG,WAAMtB,GAAN,kGAEPQ,EAASM,IAAT,iBAAuBd,EAAvB,aAFO,uBAEtBe,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,gCAK9BC,QAAQC,IAAR,MAL8B,yDAAH,qD,oBCvC/B,IAJe,SAAAM,GACb,OAAOA,EAHY,kCAGiBA,EAFlB,sBAGnB,C,oBCHD,KAAgB,IAAM,mBAAmB,KAAO,oBAAoB,KAAO,oB","sources":["components/Cast.js","servises/Api.js","servises/utils/utils.js","webpack://react-homework-template/./src/components/style.module.css?6fa0"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n//import PropTypes from 'prop-types';\n\nimport { getMovieCastById } from '../servises/Api';\nimport imgUrl from 'servises/utils/utils';\nimport styled from './style.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const result = await getMovieCastById(movieId);\n        setActors(result.cast);\n        setLoading(true);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {actors && (\n        <ul className={styled.list}>\n          {actors.map(({ id, name, profile_path, character }) => (\n            <>\n              <li key={id}>\n                <div>\n                  <p>Name: {name}</p>\n                  <img src={imgUrl(profile_path)} alt={name} width={300} />\n                  <p>Character: {character}</p>\n                </div>\n              </li>\n            </>\n          ))}\n        </ul>\n      )}\n      {loading && <p>...Loading</p>}\n      {error && <p>Cast load fail</p>}\n    </>\n  );\n};\n\nexport default Cast;\n\n// Cast.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   profile_pathe: PropTypes.number.isRequired,\n//   character: PropTypes.number.isRequired,\n// };\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'af7806c242ad95763370aa39444155c5',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await instance.get(`trending/all/day`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async search => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query: `${search}`,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCastById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG = 'http://surl.li/fquko';\nconst imgUrl = poster_path => {\n  return poster_path ? BASE_IMG_URL + poster_path : DEFAULT_IMG;\n};\n\nexport default imgUrl;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"style_btn__-6CXS\",\"item\":\"style_item__MF55d\",\"list\":\"style_list__ExEtk\"};"],"names":["useState","actors","setActors","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getMovieCastById","result","cast","className","styled","map","id","name","profile_path","character","src","imgUrl","alt","width","instance","axios","baseURL","params","api_key","getTrendingMovie","get","data","console","log","getSearchMovie","search","query","getMovieById","getMovieReviewById","poster_path"],"sourceRoot":""}