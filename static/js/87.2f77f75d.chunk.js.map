{"version":3,"file":"static/js/87.2f77f75d.chunk.js","mappings":"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","sources":["../node_modules/react-router-dom/dom.ts"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n"],"names":["prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","_ref","children","historyRef","useRef","current","v5Compat","useState","location","setStateImpl","v7_startTransition","setState","forwardRef","targetUrl","startsWith","defaultMethod","submitMethod","internalOnClick","displayName","isBrowser","currentTarget","ScrollRestoration","storageKey","useScrollRestoration","useDataRouterState","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","ariaCurrentProp","useDataRouterContext","ctx","DataRouterContext","replace","object","_temp","replaceProp","navigate","useNavigate","Form","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","body","hasSetSearchParamsRef","useMemo","getSearchParamsForLocation","setSearchParams","ABSOLUTE_URL_REGEX","tagName","nextInit","useNavigation","scrollRestoration","usePageHide","isInputElement","toLowerCase","isButtonElement","error","BrowserRouter","message","stack","START_TRANSITION","startTransitionImpl","internal","React","fetcher","href","isModifiedEvent","navigateOptions","validateClientSideSubmission","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","isPending","fetcherRouteId","isFormElement","formAction","UseSubmitFetcher","fetch","_temp2","routeContext","RouteContext","status","matches","slice","match","route","index","params","delete","values","SCROLL_RESTORATION_STORAGE_KEY","scrollY","sessionStorage","setItem","JSON","listen","newState","useLayoutEffect","Router","navigationType","navigator","HashRouter","Boolean","sessionPositions","getItem","parse","getKeyWithoutBasename"],"sourceRoot":""}